pipeline {
    agent {
                label 'Agent1'
            }
            tools {
        maven "maven"
            }
     stages {
         stage('SCM') {
            steps {
                git branch: 'master',
                credentialsId: 'git',
                url: 'git@github.com:souzare/simple-java-maven-app.git'
                sh 'ls -lah'
            }
        }
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('SonarQube analysis') {
            steps {
                script {
                def scannerHome = tool 'Sonarscanner';
                    withSonarQubeEnv('Sonar') { // If you have configured more than one global server connection, you can specify its name
                    sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=java2 -Dsonar.projectName=Java2 -Dsonar.projectVersion=1.0 -Dsonar.host.url=http://18.235.2.176:9000/ -Dsonar.sources=src/main/java/com/mycompany/app/ -Dsonar.analysis.mode="
                    }
            }
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
         stage("Quality Gate") {
            steps {
                timeout(time: 5, unit: 'MINUTES') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
            post {
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                success {
                    archiveArtifacts 'target/*.jar'
                }
            }
        }
        
     }
}
        
